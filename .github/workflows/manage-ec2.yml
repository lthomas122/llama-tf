name: Manage EC2 Instance

on:
  workflow_dispatch:
    inputs:
      instanceName:
        description: 'Name of the EC2 Instance'
        required: true
      action:
        description: 'Action to perform (apply/destroy)'
        required: true

jobs:
  apply_instance:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'apply' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: Terraform Init
      run: terraform init
    - name: Terraform Format
      run: terraform fmt
    - name: Terraform Validate
      run: terraform validate
    - name: Terraform Apply
      run: terraform apply -var instance-name=${{ github.event.inputs.instanceName }} -auto-approve

  destroy_instance:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'destroy' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: Terraform Init
      run: terraform init
    - name: Terraform FMT
      run: terraform fmt
    - name: Terraform Validate
      run: terraform validate
    - name: Terraform Destroy
      run: terraform destroy -var instance-name=${{ github.event.inputs.instanceName }}  -auto-approve
